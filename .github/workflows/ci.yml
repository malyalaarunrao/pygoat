name: CI-Pipeline

on:
  push:
    branches:
      - master 
  workflow_dispatch:

jobs:
  terraform-scan:
    runs-on: ubuntu-latest
    env:
      TF_HOME: ${{ github.workspace }}/automation/iac/app_service/terraform
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
      TF_WORKSPACE: pygoat-test   # set workspace here, matching your desired workspace name
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
  
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
  
      - name: Terraform Init & Validate
        run: |
          cd $TF_HOME
          terraform init
          terraform workspace select $TF_WORKSPACE
          terraform fmt -check
          terraform validate
  
      - name: Run Trivy for Terraform IaC
        uses: aquasecurity/trivy-action@0.31.0
        with:
          scan-type: config
          scan-ref: ${{ env.TF_HOME }}
          format: sarif
          hide-progress: false
          output: trivy-results.sarif
          exit-code: '1'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy Results to GitHub Security Tab
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif

      - name: Upload Terraform Artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: terraform
          path: ${{ env.TF_HOME }}
          if-no-files-found: error
          retention-days: 90
          overwrite: false
          include-hidden-files: true
