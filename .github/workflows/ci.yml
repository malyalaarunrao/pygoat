name: CI-Pipeline

on:
 workflow_dispatch:
  inputs:
    ci_run_id:
      description: 'Run ID of the CI pipeline used to find the artifacts'
      required: true

jobs:
  sast-scan:
    if: false # Disabling this while working on oher things.
    runs-on: ubuntu-latest
    environment: common
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: SonarQube Cloud Scan
        uses: SonarSource/sonarqube-scan-action@v4.2.1
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_QUBE }} 
        with:
          args: >
            -Dsonar.organization=malyalaarunrao
            -Dsonar.projectKey=malyalaarunrao_pygoat

  docker-build:
    if: false # Disabling this while working on other things.
    runs-on: ubuntu-latest
    environment: common
    env:
      DOCKER_USER: ${{ vars.DOCKER_USER }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      DOCKER_IMAGE_NAME: ${{ vars.DOCKER_IMAGE_NAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Docker Login
        # You may pin to the exact commit or the version.
        # uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772
        uses: docker/login-action@v3.4.0
        with:
          # registry: YOUR_REGISTRY
          # Currently uses docker hub, here no information registry is needed.
          # Username used to log against the Docker registry
          username: ${{ vars.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ vars.DOCKER_USER }}/${{ vars.DOCKER_IMAGE_NAME }}:${{ github.run_id }}

      - name: Scan image with docker scout
        uses: docker/scout-action@v1
        with:
          command: cves, recommendations
          image: ${{ vars.DOCKER_USER }}/${{ vars.DOCKER_IMAGE_NAME }}:${{ github.run_id }}
          only-severities: critical,high
          sarif-file: docker-scout-sarif.output.json
          summary: true
          # if below one is set to be true then fail the run if vulnerabilities is found
          exit-code: false 

      - name: Upload docker scout with SARIF result
        if: ${{ always() }}
        # run this even if docker scout resulted a failed run
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: docker-scout-sarif.output.json

  terraform-scan:
    runs-on: ubuntu-latest
    env:
      TF_HOME: ${{ github.workspace }}/automation/iac/app_service/terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: HashiCorp - Setup Terraform

        uses: hashicorp/setup-terraform@v2.0.3
        with:
          # The API token for a Terraform Cloud/Enterprise instance to place within the credentials block of the Terraform CLI configuration file.
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}


      #- name: Terraform formatting and Validate Check
       # run: |
          #cd $TF_HOME
          #terraform init
          #terraform fmt -check
          #terraform validate
          #cd -


      - name: Run Trivy vulnerability scanner in IaC code
        uses: aquasecurity/trivy-action@0.31.0
        with:
          scan-type: config
          scan-ref: ${{ env.TF_HOME }}
          format: sarif
          hide-progress: false
          output: trivy-results.sarif
          exit-code: '1'
          severity: 'CRITICAL,HIGH'

      - name: Upload trivy scan results to GitHub Security tab
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: terraform
          path: ${{ env.TF_HOME }}
          if-no-files-found: error
          retention-days: 90
          overwrite: false
          include-hidden-files: true
